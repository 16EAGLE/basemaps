[{"path":"https://jakob.schwalb-willmann.de/basemaps/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jakob Schwalb-Willmann. Author, maintainer.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schwalb-Willmann J (2025). basemaps: Accessing Spatial Basemaps R. R package version 0.1.0, https://jakob.schwalb-willmann.de/basemaps/.","code":"@Manual{,   title = {basemaps: Accessing Spatial Basemaps in R},   author = {Jakob Schwalb-Willmann},   year = {2025},   note = {R package version 0.1.0},   url = {https://jakob.schwalb-willmann.de/basemaps/}, }"},{"path":"https://jakob.schwalb-willmann.de/basemaps/index.html","id":"basemaps","dir":"","previous_headings":"","what":"Accessing Spatial Basemaps in R","title":"Accessing Spatial Basemaps in R","text":"basemaps lightweight R package download cache spatial basemaps open sources OpenStreetMap, Stamen, Stadia, Thunderforest, Carto, Mapbox, Esri, Maptiler others. Retrieved basemaps translated returned classes choice, terra, stars, raster, ggplot, mapview, magick, files, png geotif. package aims ease use basemaps different contexts providing function interface minimalist possible.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Accessing Spatial Basemaps in R","text":"Install latest stable release basemaps CRAN: Install latest development version basemaps GitHub:","code":"install.packages(\"basemaps\") remotes::install_github(\"16EAGLE/basemaps\")"},{"path":"https://jakob.schwalb-willmann.de/basemaps/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get started","title":"Accessing Spatial Basemaps in R","text":"available map services map types can printed using get_maptypes(). basemap() function class-specific aliases facilitate ()loading basemap returning class choice. Map preferences used session can set defaults using set_defaults().","code":"library(basemaps) data(ext) # or use draw_ext() to interactively draw an extent yourself  # view all available maps get_maptypes()  # set defaults for the basemap set_defaults(map_service = \"osm\", map_type = \"topographic\")  # load and return basemap map as class of choice, e.g. as image using magick: basemap_magick(ext) #> Loading basemap 'topographic' from map service 'osm'... # or as plot: basemap_plot(ext)  # or as ggplot2: basemap_ggplot(ext)  # or as ggplot2 layer: library(ggplot2) ggplot() +    basemap_gglayer(ext) +   scale_fill_identity() +    coord_sf() # or as mapview: basemap_mapview(ext) # or as spatial classes, such as terra: basemap_terra(ext) #> class       : SpatRaster  #> dimensions  : 614, 669, 3  (nrow, ncol, nlyr) #> resolution  : 19.10926, 19.10926  (x, y) #> extent      : 1224617, 1237401, 6032659, 6044392  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / Pseudo-Mercator (EPSG:3857)  #> colors RGB  : 1, 2, 3  #> names       : red, green, blue  #> min values  :   0,     0,    0  #> max values  : 253,   254,  255  # or stars: basemap_stars(ext) #> stars object with 3 dimensions and 1 attribute #> attribute(s), summary of first 1e+05 cells: #> Min. 1st Qu. Median     Mean 3rd Qu. Max. #> 0     183    213 201.3209     234  253 #> dimension(s): #>      from  to  offset  delta                   refsys #> x       1 669 1224617  19.11 WGS 84 / Pseudo-Mercator  #> y       1 614 6044392 -19.11 WGS 84 / Pseudo-Mercator #> ...  # or return as file(s), e.g. GeoTif basemap_geotif(ext) #> [1] \"basemap_20220922214954.tif\"  # or PNG: basemap_png(ext) #> [1] \"osm_topographic_bg_2022-09-22_12-00-00.png\""},{"path":"https://jakob.schwalb-willmann.de/basemaps/index.html","id":"map-examples","dir":"","previous_headings":"","what":"Map examples","title":"Accessing Spatial Basemaps in R","text":"basemaps supports variety map services types (can printed using get_maptypes()). selection available map types shown . complete table available map types, see supported services maps.","code":"basemap(ext, map_service = \"osm\", map_type = \"streets\") #> Loading basemap 'streets' from map service 'osm'... basemap(ext, map_service = \"mapbox\", map_type = \"satellite\") #> Loading basemap 'satellite' from map service 'mapbox'... basemap(ext, map_service = \"mapbox\", map_type = \"hybrid\") #> Loading basemap 'hybrid' from map service 'mapbox'... basemap(ext, map_service = \"mapbox\", map_type = \"streets\") #> Loading basemap 'streets' from map service 'mapbox'... basemap(ext, map_service = \"mapbox\", map_type = \"terrain\") #> Loading basemap 'terrain' from map service 'mapbox'... basemap(ext, map_service = \"osm_stamen\", map_type = \"terrain_bg\") #> Loading basemap 'terrain_bg' from map service 'osm_stamen'... basemap(ext, map_service = \"osm_stamen\", map_type = \"toner\") #> Loading basemap 'toner' from map service 'osm_stamen'... basemap(ext, map_service = \"osm_stamen\", map_type = \"watercolor\") #> Loading basemap 'watercolor' from map service 'osm_stamen'... basemap(ext, map_service = \"osm_thunderforest\", map_type = \"transport\") #> Loading basemap 'transport' from map service 'osm_thunderforest'... basemap(ext, map_service = \"osm_thunderforest\", map_type = \"landscape\") #> Loading basemap 'landscape' from map service 'osm_thunderforest'... basemap(ext, map_service = \"osm_thunderforest\", map_type = \"outdoors\") #> Loading basemap 'outdoors' from map service 'osm_thunderforest'... basemap(ext, map_service = \"osm_thunderforest\", map_type = \"atlas\") #> Loading basemap 'atlas' from map service 'osm_thunderforest'... basemap(ext, map_service = \"carto\", map_type = \"light\") #> Loading basemap 'light' from map service 'carto'... basemap(ext, map_service = \"carto\", map_type = \"dark\") #> Loading basemap 'dark' from map service 'carto'... basemap(ext, map_service = \"maptiler\", map_type = \"satellite\") #> Loading basemap 'satellite' from map service 'maptiler'... basemap(ext, map_service = \"maptiler\", map_type = \"backdrop\") #> Loading basemap 'backdrop' from map service 'maptiler'..."},{"path":"https://jakob.schwalb-willmann.de/basemaps/index.html","id":"supported-services-and-maps","dir":"","previous_headings":"","what":"Supported services and maps","title":"Accessing Spatial Basemaps in R","text":"table lists currently implemented map services map types indicates whether can used without map token (requiring registration respective service) . date implementation, map services requiring registration offer maps free (please refer respective services’ terms use details).","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/index.html","id":"available-functions","dir":"","previous_headings":"","what":"Available functions","title":"Accessing Spatial Basemaps in R","text":"get_maptypes() returns every supported map service map type can used input map_service map_type arguments set_defaults(), basemap() associated functions. draw_ext() lets draw extent interactive map. set_defaults(), get_defaults() reset_defaults() set, get reset defaults map arguments passed basemap() associated functions. basemap() aliases basemap_raster(), basemap_stars(), basemap_mapview(), basemap_plot(), basemap_ggplot(), basemap_gglayer(), basemap_magick(), basemap_png() basemap_geotif() ()load cache basemap defined extent ext, map_service map_type return object defined class. gg_raster() plots objects class SpatRaster, RasterLayer, RasterBrick RasterStack ggplot2. flush_cache() deletes cached map tiles basemaps.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related packages","title":"Accessing Spatial Basemaps in R","text":"interested obtaining basemaps, also may want look ceramic, R package developed Michael Sumner similar goal. underpinning code basemaps originally developed moveVis detached allow general use.  content file may protected (brand names, map imagery etc.), © Mapbox © Thunderforest © Stamen © Carto © Esri © Maptiler. Many thanks creators reprex used compile parts README.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/basemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a spatial basemap — basemap","title":"Get a spatial basemap — basemap","text":"functions ()load cache basemap defined extent ext, map_service map_type return object defined class. Alternatively defining following arguments, set_defaults can used define basemap preferences running session.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/basemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a spatial basemap — basemap","text":"","code":"basemap(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL,   class = \"plot\",   force = FALSE,   ...,   verbose = TRUE )  basemap_plot(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL,   force = NULL,   ...,   verbose = TRUE )  basemap_magick(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL,   force = NULL,   ...,   verbose = TRUE )  basemap_png(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL,   force = NULL,   ...,   verbose = TRUE )  basemap_geotif(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL,   force = NULL,   ...,   verbose = TRUE )  basemap_terra(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL,   force = NULL,   ...,   verbose = TRUE )  basemap_raster(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL,   force = NULL,   ...,   verbose = TRUE )  basemap_stars(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL,   force = NULL,   ...,   verbose = TRUE )  basemap_ggplot(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL,   force = NULL,   ...,   verbose = TRUE )  basemap_gglayer(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL,   force = NULL,   ...,   verbose = TRUE )  basemap_mapview(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL,   force = NULL,   ...,   verbose = TRUE )"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/basemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a spatial basemap — basemap","text":"ext extent covered basemap spatial class supported st_bbox. map_service character, map service, either \"osm\", \"carto\" \"mapbox\". Default \"osm\". map_type character, map type, e.g. \"streets\". full list available map types, see get_maptypes. map_res numeric, resolution base map range 0 1. map_token character, authentication token services require registration, \"osm_stamen\", \"osm_stadia\", \"osm_thunderforest\", \"maptiler\" \"mapbox\". Register https://stadiamaps.com/ (stamen stadia), https://www.thunderforest.com/, https://www.maptiler.com/ /https://www.mapbox.com/ get tokens. Ignored map services. map_dir character, cache directory downloaded basemap tiles stored. default, temporary directory used, destroyed session terminated. class character, output class, either either plot (default), magick, png, geotif suggested packages installed, terra, raster, stars, ggplot, gglayer mapview. force logical, whether force download cached files . Default FALSE. ... additional arguments, including browse, logical, class = \"png\" interactive sessions . Whether open png file system's default PNG viewer . Default TRUE. col, character vector colours transforming single-layer basemaps RGB, class = \"png\" class = \"magick\". Default topo.colors(25). dpi,  numeric vector length 1 2 specifying resolution image DPI (dots per inch) x y (order) - recycled length 2. etc. (see ?gg_raster valid arguments using class = \"gglayer\" class = \"ggplot\", including maxpixels control resolution ggplot outputs verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/basemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a spatial basemap — basemap","text":"basemap defined class Web/Pseudo Mercator Projection (EPSG: 3857)","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/basemap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get a spatial basemap — basemap","text":"See get_maptypes available map services sources. use map services \"osm_thunderforest\" \"mapbox\" require registration obtain API token/key can supplied map_token. Register https://www.thunderforest.com/ /https://www.mapbox.com/ get token.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/basemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a spatial basemap — basemap","text":"","code":"library(basemaps)  # example extent data(ext)  # view all available maps get_maptypes() #> $osm #> [1] \"streets\"     \"streets_de\"  \"topographic\" #>  #> $osm_stamen #> [1] \"toner\"      \"toner_bg\"   \"terrain\"    \"terrain_bg\" \"watercolor\" #>  #> $osm_stadia #> [1] \"alidade_smooth\"      \"alidade_smooth_dark\" \"outdoors\"            #> [4] \"osm_bright\"          #>  #> $osm_thunderforest #>  [1] \"cycle\"          \"transport\"      \"landscape\"      \"outdoors\"       #>  [5] \"transport_dark\" \"spinal\"         \"pioneer\"        \"mobile_atlas\"   #>  [9] \"neighbourhood\"  \"atlas\"          #>  #> $carto #>  [1] \"light\"                \"light_no_labels\"      \"light_only_labels\"    #>  [4] \"dark\"                 \"dark_no_labels\"       \"dark_only_labels\"     #>  [7] \"voyager\"              \"voyager_no_labels\"    \"voyager_only_labels\"  #> [10] \"voyager_labels_under\" #>  #> $mapbox #> [1] \"streets\"   \"outdoors\"  \"light\"     \"dark\"      \"satellite\" \"hybrid\"    #> [7] \"terrain\"   #>  #> $esri #>  [1] \"natgeo_world_map\"                      #>  [2] \"usa_topo_maps\"                         #>  [3] \"world_imagery\"                         #>  [4] \"world_physical_map\"                    #>  [5] \"world_shaded_relief\"                   #>  [6] \"world_street_map\"                      #>  [7] \"world_terrain_base\"                    #>  [8] \"world_topo_map\"                        #>  [9] \"world_dark_gray_base\"                  #> [10] \"world_dark_gray_reference\"             #> [11] \"world_light_gray_base\"                 #> [12] \"world_light_gray_reference\"            #> [13] \"world_hillshade_dark\"                  #> [14] \"world_hillshade\"                       #> [15] \"world_ocean_base\"                      #> [16] \"world_ocean_reference\"                 #> [17] \"antarctic_imagery\"                     #> [18] \"arctic_imagery\"                        #> [19] \"arctic_ocean_base\"                     #> [20] \"arctic_ocean_reference\"                #> [21] \"world_boundaries_and_places_alternate\" #> [22] \"world_boundaries_and_places\"           #> [23] \"world_reference_overlay\"               #> [24] \"world_transportation\"                  #> [25] \"delorme_world_base_map\"                #> [26] \"world_navigation_charts\"               #>  #> $maptiler #>  [1] \"aquarelle\"       \"aquarelle_dark\"  \"aquarelle_vivid\" \"backdrop\"        #>  [5] \"basic\"           \"bright\"          \"dataviz\"         \"landscape\"       #>  [9] \"ocean\"           \"outdoor\"         \"satellite\"       \"streets\"         #> [13] \"toner\"           \"topo\"            \"winter\"          #>   # set defaults for the basemap set_defaults(map_service = \"osm\", map_type = \"terrain_bg\") # for \"osm_stamen\", \"osm_stadia\", osm \"thunderforest\", \"maptiler\" and \"mapbox\" maps,  # you need a API token. Register for free at stadiamaps.com, thunderforest.com,  # maptiler.com and mapbox.com to get tokens.  if (FALSE) { # \\dontrun{ # load and plot basemap (default) map <- basemap(ext)  # or explicitely as different classes such as: basemap_magick(ext) basemap_raster(ext) basemap_stars(ext)  # or as files: basemap_geotif(ext) basemap_png(ext)  # or as plots: basemap_plot(ext) basemap_mapview(ext)  # including ggplot2: basemap_ggplot(ext)  # or as ggplot2 layer: library(ggplot2) ggplot() + basemap_gglayer(ext) +   scale_fill_identity() +   coord_sf()  # or, when combined with an sf vector object, # make sure to use Web/Pseudo Mercator (EPSG 3857), as this is # the CRS in which all basemaps are returned (see \"Value\"): library(sf) ext <- st_transform(ext,  crs = st_crs(3857)) ggplot() +   basemap_gglayer(ext) +   geom_sf(data = ext, color = \"red\", fill = \"transparent\") +   coord_sf() +   scale_fill_identity() } # }"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Flush basemaps cache — cache","title":"Flush basemaps cache — cache","text":"function flushes basemaps cache thereby removes previously queried /composited products map directories (temporary user-defined using argument map_dir) used current session.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flush basemaps cache — cache","text":"","code":"flush_cache()"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flush basemaps cache — cache","text":"None.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flush basemaps cache — cache","text":"","code":"library(basemaps) flush_cache()"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example extent — data","title":"Example extent — data","text":"example datasets contain sf objects ext ext_eur can used call basemap associated functions.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example extent — data","text":"","code":"data(ext)  data(ext_eur)"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example extent — data","text":"sf object object class sf (inherits data.frame) 1 rows 3 columns.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Set, get and reset basemaps defaults — defaults","title":"Set, get and reset basemaps defaults — defaults","text":"functions set, get reset defaults map arguments passed basemap associated functions.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set, get and reset basemaps defaults — defaults","text":"","code":"set_defaults(   ext = NULL,   map_service = NULL,   map_type = NULL,   map_res = NULL,   map_token = NULL,   map_dir = NULL )  get_defaults()  reset_defaults()"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/defaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set, get and reset basemaps defaults — defaults","text":"ext extent covered basemap spatial class supported st_bbox. map_service character, map service, either \"osm\", \"carto\" \"mapbox\". Default \"osm\". map_type character, map type, e.g. \"streets\". full list available map types, see get_maptypes. map_res numeric, resolution base map range 0 1. map_token character, authentication token services require registration, \"osm_stamen\", \"osm_stadia\", \"osm_thunderforest\", \"maptiler\" \"mapbox\". Register https://stadiamaps.com/ (stamen stadia), https://www.thunderforest.com/, https://www.maptiler.com/ /https://www.mapbox.com/ get tokens. Ignored map services. map_dir character, cache directory downloaded basemap tiles stored. default, temporary directory used, destroyed session terminated.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/defaults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set, get and reset basemaps defaults — defaults","text":"get_defaults, list defaults, otherwise none.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/defaults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set, get and reset basemaps defaults — defaults","text":"","code":"library(basemaps) data(ext)  # set defaults for the basemap set_defaults(ext = ext, map_service = \"osm\", map_type = \"terrain_bg\")  # get defaults get_defaults() #> $map_service #> [1] \"osm\" #>  #> $map_type #> [1] \"terrain_bg\" #>  #> $map_res #> [1] 1 #>  #> $map_token #> [1] NA #>  #> $map_dir #> [1] \"/tmp/Rtmp0L4LuJ/basemaps/\" #>  #> $ext #> Simple feature collection with 1 feature and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 11.00096 ymin: 47.55211 xmax: 11.11581 ymax: 47.62316 #> Geodetic CRS:  WGS 84 #>   X_leaflet_id feature_type                       geometry #> 1          380    rectangle POLYGON ((11.00097 47.55211... #>   if (FALSE) { # \\dontrun{ # load and return basemap map as raster (default) map <- basemap() } # }  # reset defaults reset_defaults()"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/draw_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw extent — draw_ext","title":"Draw extent — draw_ext","text":"function lets draw extent interactive map. simple wrapper around mapedit::drawFeatures() written Tim Appelhans et al.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/draw_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw extent — draw_ext","text":"","code":"draw_ext()"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/draw_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw extent — draw_ext","text":"sf object","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/draw_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw extent — draw_ext","text":"","code":"if (FALSE) { # \\dontrun{ library(basemaps)  # draw extent interactively ext <- draw_ext()  # set defaults for the basemap set_defaults(ext = ext, map_service = \"osm\", map_type = \"terrain_bg\") # for mapbox maps, you need a map_token. Register for free at mapbox.com to get a token  # load and return basemap map as raster (default) map <- basemap() } # }"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/maptypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get supported map types or add new map types — maptypes","title":"Get supported map types or add new map types — maptypes","text":"functions manage map types.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/maptypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get supported map types or add new map types — maptypes","text":"","code":"get_maptypes(map_service = NULL, as_df = FALSE, url_cols = FALSE)  add_maptypes(   map_service,   map_type,   url_endpoint,   url_xy = \"xy\",   url_file_format = \".png\",   url_map_token = as.character(NA),   auth_error_code = 401,   url_website = as.character(NA) )  save_maptypes(file)  load_maptypes(file)"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/maptypes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get supported map types or add new map types — maptypes","text":"\"osm\": Open Street Map contributors (https://www.openstreetmap.org/copyright), Open Topo Map (https://opentopomap.org/) \"osm_stamen\": Stamen (https://maps.stamen.com/) via Stadia Maps (https://stadiamaps.com/), Open Street Map contributors (https://www.openstreetmap.org/copyright) \"osm_stadia\": Stadia Maps (https://stadiamaps.com/), Open Street Map contributors (https://www.openstreetmap.org/copyright) \"osm_thunderforest\": Thunderforest (https://www.thunderforest.com/), Open Street Map contributors (https://www.openstreetmap.org/copyright) \"carto\": Carto (https://carto.com/) \"mapbox\": Mapbox (https://www.mapbox.com) \"esri\": Esri (https://www.esri.com/en-us/home) \"maptiler\": Esri (https://www.maptiler.com)","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/maptypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get supported map types or add new map types — maptypes","text":"map_service character. get_maptypes(): optional, either \"osm\", \"osm_stamen\", \"osm_stadia\", \"osm_thunderforest\",  \"carto\", \"mapbox\", \"esri\" \"maptiler\". Otherwise, list map types services returned. add_maptypes(): character, name map service map type add belongs as_df logical, whether return data.frame instead list (defaults FALSE) url_cols logical, whether include endpoint URL auxiliary URL columns (defults FALSE). Ignored, as_df = FALSE map_type character, name map type add url_endpoint character, endpoint URL map service type add url_xy character, either \"xy\" \"yx\" defining order map service add expecting tile subscripts (defaults \"xy\") url_file_format character, file format endpoint add using (defaults \".png\"). url_map_token character, optional, request query string used endpoint add transmitting authentification tokens required (defaults NA). Run get_maptypes(as_df = T, url_cols = T)$url_map_token examples. auth_error_code numeric, http error code endpoint add uses authentification failed (defaults 401) url_website character, optional, website URL service add user directed registering (defaults NA). file character, file name ending \".csv\" map types table saved loaded .","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/maptypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get supported map types or add new map types — maptypes","text":"character vector supported map types","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/maptypes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get supported map types or add new map types — maptypes","text":"get_maptypes() returns every supported map type can used input map_type argument set_defaults, basemap associated functions. add_maptypes() adds custom user-defined map types. save_maptypes() saves current map types table (printed get_maptypes(as_df = T, url_cols = T)) file. load_maptypes() loads map types table file.","code":""},{"path":[]},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/maptypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get supported map types or add new map types — maptypes","text":"","code":"# for all services, as list (default:) get_maptypes() #> $osm #> [1] \"streets\"     \"streets_de\"  \"topographic\" #>  #> $osm_stamen #> [1] \"toner\"      \"toner_bg\"   \"terrain\"    \"terrain_bg\" \"watercolor\" #>  #> $osm_stadia #> [1] \"alidade_smooth\"      \"alidade_smooth_dark\" \"outdoors\"            #> [4] \"osm_bright\"          #>  #> $osm_thunderforest #>  [1] \"cycle\"          \"transport\"      \"landscape\"      \"outdoors\"       #>  [5] \"transport_dark\" \"spinal\"         \"pioneer\"        \"mobile_atlas\"   #>  [9] \"neighbourhood\"  \"atlas\"          #>  #> $carto #>  [1] \"light\"                \"light_no_labels\"      \"light_only_labels\"    #>  [4] \"dark\"                 \"dark_no_labels\"       \"dark_only_labels\"     #>  [7] \"voyager\"              \"voyager_no_labels\"    \"voyager_only_labels\"  #> [10] \"voyager_labels_under\" #>  #> $mapbox #> [1] \"streets\"   \"outdoors\"  \"light\"     \"dark\"      \"satellite\" \"hybrid\"    #> [7] \"terrain\"   #>  #> $esri #>  [1] \"natgeo_world_map\"                      #>  [2] \"usa_topo_maps\"                         #>  [3] \"world_imagery\"                         #>  [4] \"world_physical_map\"                    #>  [5] \"world_shaded_relief\"                   #>  [6] \"world_street_map\"                      #>  [7] \"world_terrain_base\"                    #>  [8] \"world_topo_map\"                        #>  [9] \"world_dark_gray_base\"                  #> [10] \"world_dark_gray_reference\"             #> [11] \"world_light_gray_base\"                 #> [12] \"world_light_gray_reference\"            #> [13] \"world_hillshade_dark\"                  #> [14] \"world_hillshade\"                       #> [15] \"world_ocean_base\"                      #> [16] \"world_ocean_reference\"                 #> [17] \"antarctic_imagery\"                     #> [18] \"arctic_imagery\"                        #> [19] \"arctic_ocean_base\"                     #> [20] \"arctic_ocean_reference\"                #> [21] \"world_boundaries_and_places_alternate\" #> [22] \"world_boundaries_and_places\"           #> [23] \"world_reference_overlay\"               #> [24] \"world_transportation\"                  #> [25] \"delorme_world_base_map\"                #> [26] \"world_navigation_charts\"               #>  #> $maptiler #>  [1] \"aquarelle\"       \"aquarelle_dark\"  \"aquarelle_vivid\" \"backdrop\"        #>  [5] \"basic\"           \"bright\"          \"dataviz\"         \"landscape\"       #>  [9] \"ocean\"           \"outdoor\"         \"satellite\"       \"streets\"         #> [13] \"toner\"           \"topo\"            \"winter\"          #>   # for osm only get_maptypes(\"osm\") #> [1] \"streets\"     \"streets_de\"  \"topographic\" # or get_maptypes()$osm #> [1] \"streets\"     \"streets_de\"  \"topographic\"  # for mapbox only get_maptypes(\"mapbox\") #> [1] \"streets\"   \"outdoors\"  \"light\"     \"dark\"      \"satellite\" \"hybrid\"    #> [7] \"terrain\"   # or get_maptypes()$mapbox #> [1] \"streets\"   \"outdoors\"  \"light\"     \"dark\"      \"satellite\" \"hybrid\"    #> [7] \"terrain\"    # same for all other map services  # or as data.frame: get_maptypes(as_df = TRUE) #>          map_service                              map_type #> 1                osm                               streets #> 2                osm                            streets_de #> 3                osm                           topographic #> 4         osm_stamen                                 toner #> 5         osm_stamen                              toner_bg #> 6         osm_stamen                               terrain #> 7         osm_stamen                            terrain_bg #> 8         osm_stamen                            watercolor #> 9         osm_stadia                        alidade_smooth #> 10        osm_stadia                   alidade_smooth_dark #> 11        osm_stadia                              outdoors #> 12        osm_stadia                            osm_bright #> 13 osm_thunderforest                                 cycle #> 14 osm_thunderforest                             transport #> 15 osm_thunderforest                             landscape #> 16 osm_thunderforest                              outdoors #> 17 osm_thunderforest                        transport_dark #> 18 osm_thunderforest                                spinal #> 19 osm_thunderforest                               pioneer #> 20 osm_thunderforest                          mobile_atlas #> 21 osm_thunderforest                         neighbourhood #> 22 osm_thunderforest                                 atlas #> 23             carto                                 light #> 24             carto                       light_no_labels #> 25             carto                     light_only_labels #> 26             carto                                  dark #> 27             carto                        dark_no_labels #> 28             carto                      dark_only_labels #> 29             carto                               voyager #> 30             carto                     voyager_no_labels #> 31             carto                   voyager_only_labels #> 32             carto                  voyager_labels_under #> 33            mapbox                               streets #> 34            mapbox                              outdoors #> 35            mapbox                                 light #> 36            mapbox                                  dark #> 37            mapbox                             satellite #> 38            mapbox                                hybrid #> 39            mapbox                               terrain #> 40              esri                      natgeo_world_map #> 41              esri                         usa_topo_maps #> 42              esri                         world_imagery #> 43              esri                    world_physical_map #> 44              esri                   world_shaded_relief #> 45              esri                      world_street_map #> 46              esri                    world_terrain_base #> 47              esri                        world_topo_map #> 48              esri                  world_dark_gray_base #> 49              esri             world_dark_gray_reference #> 50              esri                 world_light_gray_base #> 51              esri            world_light_gray_reference #> 52              esri                  world_hillshade_dark #> 53              esri                       world_hillshade #> 54              esri                      world_ocean_base #> 55              esri                 world_ocean_reference #> 56              esri                     antarctic_imagery #> 57              esri                        arctic_imagery #> 58              esri                     arctic_ocean_base #> 59              esri                arctic_ocean_reference #> 60              esri world_boundaries_and_places_alternate #> 61              esri           world_boundaries_and_places #> 62              esri               world_reference_overlay #> 63              esri                  world_transportation #> 64              esri                delorme_world_base_map #> 65              esri               world_navigation_charts #> 66          maptiler                             aquarelle #> 67          maptiler                        aquarelle_dark #> 68          maptiler                       aquarelle_vivid #> 69          maptiler                              backdrop #> 70          maptiler                                 basic #> 71          maptiler                                bright #> 72          maptiler                               dataviz #> 73          maptiler                             landscape #> 74          maptiler                                 ocean #> 75          maptiler                               outdoor #> 76          maptiler                             satellite #> 77          maptiler                               streets #> 78          maptiler                                 toner #> 79          maptiler                                  topo #> 80          maptiler                                winter  # or as data.frame including all url columns (endpoints): get_maptypes(as_df = TRUE, url_cols = TRUE) #>          map_service                              map_type #> 1                osm                               streets #> 2                osm                            streets_de #> 3                osm                           topographic #> 4         osm_stamen                                 toner #> 5         osm_stamen                              toner_bg #> 6         osm_stamen                               terrain #> 7         osm_stamen                            terrain_bg #> 8         osm_stamen                            watercolor #> 9         osm_stadia                        alidade_smooth #> 10        osm_stadia                   alidade_smooth_dark #> 11        osm_stadia                              outdoors #> 12        osm_stadia                            osm_bright #> 13 osm_thunderforest                                 cycle #> 14 osm_thunderforest                             transport #> 15 osm_thunderforest                             landscape #> 16 osm_thunderforest                              outdoors #> 17 osm_thunderforest                        transport_dark #> 18 osm_thunderforest                                spinal #> 19 osm_thunderforest                               pioneer #> 20 osm_thunderforest                          mobile_atlas #> 21 osm_thunderforest                         neighbourhood #> 22 osm_thunderforest                                 atlas #> 23             carto                                 light #> 24             carto                       light_no_labels #> 25             carto                     light_only_labels #> 26             carto                                  dark #> 27             carto                        dark_no_labels #> 28             carto                      dark_only_labels #> 29             carto                               voyager #> 30             carto                     voyager_no_labels #> 31             carto                   voyager_only_labels #> 32             carto                  voyager_labels_under #> 33            mapbox                               streets #> 34            mapbox                              outdoors #> 35            mapbox                                 light #> 36            mapbox                                  dark #> 37            mapbox                             satellite #> 38            mapbox                                hybrid #> 39            mapbox                               terrain #> 40              esri                      natgeo_world_map #> 41              esri                         usa_topo_maps #> 42              esri                         world_imagery #> 43              esri                    world_physical_map #> 44              esri                   world_shaded_relief #> 45              esri                      world_street_map #> 46              esri                    world_terrain_base #> 47              esri                        world_topo_map #> 48              esri                  world_dark_gray_base #> 49              esri             world_dark_gray_reference #> 50              esri                 world_light_gray_base #> 51              esri            world_light_gray_reference #> 52              esri                  world_hillshade_dark #> 53              esri                       world_hillshade #> 54              esri                      world_ocean_base #> 55              esri                 world_ocean_reference #> 56              esri                     antarctic_imagery #> 57              esri                        arctic_imagery #> 58              esri                     arctic_ocean_base #> 59              esri                arctic_ocean_reference #> 60              esri world_boundaries_and_places_alternate #> 61              esri           world_boundaries_and_places #> 62              esri               world_reference_overlay #> 63              esri                  world_transportation #> 64              esri                delorme_world_base_map #> 65              esri               world_navigation_charts #> 66          maptiler                             aquarelle #> 67          maptiler                        aquarelle_dark #> 68          maptiler                       aquarelle_vivid #> 69          maptiler                              backdrop #> 70          maptiler                                 basic #> 71          maptiler                                bright #> 72          maptiler                               dataviz #> 73          maptiler                             landscape #> 74          maptiler                                 ocean #> 75          maptiler                               outdoor #> 76          maptiler                             satellite #> 77          maptiler                               streets #> 78          maptiler                                 toner #> 79          maptiler                                  topo #> 80          maptiler                                winter #>                                                                                                              url_endpoint #> 1                                                                                         https://tile.openstreetmap.org/ #> 2                                                                               http://tile.openstreetmap.de/tiles/osmde/ #> 3                                                                                           https://tile.opentopomap.org/ #> 4                                                                        https://tiles.stadiamaps.com/tiles/stamen_toner/ #> 5                                                             https://tiles.stadiamaps.com/tiles/stamen_toner_background/ #> 6                                                                      https://tiles.stadiamaps.com/tiles/stamen_terrain/ #> 7                                                           https://tiles.stadiamaps.com/tiles/stamen_terrain_background/ #> 8                                                                   https://tiles.stadiamaps.com/tiles/stamen_watercolor/ #> 9                                                                      https://tiles.stadiamaps.com/tiles/alidade_smooth/ #> 10                                                                https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/ #> 11                                                                           https://tiles.stadiamaps.com/tiles/outdoors/ #> 12                                                                         https://tiles.stadiamaps.com/tiles/osm_bright/ #> 13                                                                                  https://tile.thunderforest.com/cycle/ #> 14                                                                              https://tile.thunderforest.com/transport/ #> 15                                                                              https://tile.thunderforest.com/landscape/ #> 16                                                                               https://tile.thunderforest.com/outdoors/ #> 17                                                                         https://tile.thunderforest.com/transport-dark/ #> 18                                                                             https://tile.thunderforest.com/spinal-map/ #> 19                                                                                https://tile.thunderforest.com/pioneer/ #> 20                                                                           https://tile.thunderforest.com/mobile-atlas/ #> 21                                                                          https://tile.thunderforest.com/neighbourhood/ #> 22                                                                                  https://tile.thunderforest.com/atlas/ #> 23                                                                               https://basemaps.cartocdn.com/light_all/ #> 24                                                                          https://basemaps.cartocdn.com/light_nolabels/ #> 25                                                                       https://basemaps.cartocdn.com/light_only_labels/ #> 26                                                                                https://basemaps.cartocdn.com/dark_all/ #> 27                                                                           https://basemaps.cartocdn.com/dark_nolabels/ #> 28                                                                        https://basemaps.cartocdn.com/dark_only_labels/ #> 29                                                                     https://basemaps.cartocdn.com/rastertiles/voyager/ #> 30                                                            https://basemaps.cartocdn.com/rastertiles/voyager_nolabels/ #> 31                                                         https://basemaps.cartocdn.com/rastertiles/voyager_only_labels/ #> 32                                                        https://basemaps.cartocdn.com/rastertiles/voyager_labels_under/ #> 33                                                             https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/ #> 34                                                            https://api.mapbox.com/styles/v1/mapbox/outdoors-v11/tiles/ #> 35                                                               https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/ #> 36                                                                https://api.mapbox.com/styles/v1/mapbox/dark-v10/tiles/ #> 37                                                            https://api.mapbox.com/styles/v1/mapbox/satellite-v9/tiles/ #> 38                                                    https://api.mapbox.com/styles/v1/mapbox/satellite-streets-v9/tiles/ #> 39                                                                          https://api.mapbox.com/v4/mapbox.terrain-rgb/ #> 40                                https://services.arcgisonline.com/arcgis/rest/services/NatGeo_World_Map/MapServer/tile/ #> 41                                   https://services.arcgisonline.com/arcgis/rest/services/USA_Topo_Maps/MapServer/tile/ #> 42                                   https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer/tile/ #> 43                              https://services.arcgisonline.com/arcgis/rest/services/World_Physical_Map/MapServer/tile/ #> 44                             https://services.arcgisonline.com/arcgis/rest/services/World_Shaded_Relief/MapServer/tile/ #> 45                                https://services.arcgisonline.com/arcgis/rest/services/World_Street_Map/MapServer/tile/ #> 46                              https://services.arcgisonline.com/arcgis/rest/services/World_Terrain_Base/MapServer/tile/ #> 47                                  https://services.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer/tile/ #> 48                     https://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Dark_Gray_Base/MapServer/tile/ #> 49                https://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Dark_Gray_Reference/MapServer/tile/ #> 50                    https://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/ #> 51               https://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Light_Gray_Reference/MapServer/tile/ #> 52                  https://services.arcgisonline.com/arcgis/rest/services/Elevation/World_Hillshade_Dark/MapServer/tile/ #> 53                       https://services.arcgisonline.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer/tile/ #> 54                          https://services.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Base/MapServer/tile/ #> 55                     https://services.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Reference/MapServer/tile/ #> 56                         https://services.arcgisonline.com/arcgis/rest/services/Polar/Antarctic_Imagery/MapServer/tile/ #> 57                            https://services.arcgisonline.com/arcgis/rest/services/Polar/Arctic_Imagery/MapServer/tile/ #> 58                         https://services.arcgisonline.com/arcgis/rest/services/Polar/Arctic_Ocean_Base/MapServer/tile/ #> 59                    https://services.arcgisonline.com/arcgis/rest/services/Polar/Arctic_Ocean_Reference/MapServer/tile/ #> 60 https://services.arcgisonline.com/arcgis/rest/services/Reference/World_Boundaries_and_Places_Alternate/MapServer/tile/ #> 61           https://services.arcgisonline.com/arcgis/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/ #> 62               https://services.arcgisonline.com/arcgis/rest/services/Reference/World_Reference_Overlay/MapServer/tile/ #> 63                  https://services.arcgisonline.com/arcgis/rest/services/Reference/World_Transportation/MapServer/tile/ #> 64                https://services.arcgisonline.com/arcgis/rest/services/Specialty/DeLorme_World_Base_Map/MapServer/tile/ #> 65               https://services.arcgisonline.com/arcgis/rest/services/Specialty/World_Navigation_Charts/MapServer/tile/ #> 66                                                                               https://api.maptiler.com/maps/aquarelle/ #> 67                                                                          https://api.maptiler.com/maps/aquarelle-dark/ #> 68                                                                         https://api.maptiler.com/maps/aquarelle-vivid/ #> 69                                                                                https://api.maptiler.com/maps/backdrop/ #> 70                                                                                https://api.maptiler.com/maps/basic-v2/ #> 71                                                                               https://api.maptiler.com/maps/bright-v2/ #> 72                                                                                 https://api.maptiler.com/maps/dataviz/ #> 73                                                                               https://api.maptiler.com/maps/landscape/ #> 74                                                                                   https://api.maptiler.com/maps/ocean/ #> 75                                                                              https://api.maptiler.com/maps/outdoor-v2/ #> 76                                                                               https://api.maptiler.com/maps/satellite/ #> 77                                                                              https://api.maptiler.com/maps/streets-v2/ #> 78                                                                                https://api.maptiler.com/maps/toner-v2/ #> 79                                                                                 https://api.maptiler.com/maps/topo-v2/ #> 80                                                                               https://api.maptiler.com/maps/winter-v2/ #>    url_xy url_file_format  url_map_token auth_error_code #> 1      xy            .png           <NA>             401 #> 2      xy            .png           <NA>             401 #> 3      xy            .png           <NA>             401 #> 4      xy            .png      ?api_key=             401 #> 5      xy            .png      ?api_key=             401 #> 6      xy            .png      ?api_key=             401 #> 7      xy            .png      ?api_key=             401 #> 8      xy            .jpg      ?api_key=             401 #> 9      xy            .png      ?api_key=             401 #> 10     xy            .png      ?api_key=             401 #> 11     xy            .png      ?api_key=             401 #> 12     xy            .png      ?api_key=             401 #> 13     xy            .png       ?apikey=             403 #> 14     xy            .png       ?apikey=             403 #> 15     xy            .png       ?apikey=             403 #> 16     xy            .png       ?apikey=             403 #> 17     xy            .png       ?apikey=             403 #> 18     xy            .png       ?apikey=             403 #> 19     xy            .png       ?apikey=             403 #> 20     xy            .png       ?apikey=             403 #> 21     xy            .png       ?apikey=             403 #> 22     xy            .png       ?apikey=             403 #> 23     xy            .png           <NA>             401 #> 24     xy            .png           <NA>             401 #> 25     xy            .png           <NA>             401 #> 26     xy            .png           <NA>             401 #> 27     xy            .png           <NA>             401 #> 28     xy            .png           <NA>             401 #> 29     xy            .png           <NA>             401 #> 30     xy            .png           <NA>             401 #> 31     xy            .png           <NA>             401 #> 32     xy            .png           <NA>             401 #> 33     xy                 ?access_token=             401 #> 34     xy                 ?access_token=             401 #> 35     xy                 ?access_token=             401 #> 36     xy                 ?access_token=             401 #> 37     xy                 ?access_token=             401 #> 38     xy                 ?access_token=             401 #> 39     xy            .png ?access_token=             401 #> 40     xy            .png           <NA>             401 #> 41     yx            .png           <NA>             401 #> 42     yx            .png           <NA>             401 #> 43     yx            .png           <NA>             401 #> 44     yx            .png           <NA>             401 #> 45     yx            .png           <NA>             401 #> 46     yx            .png           <NA>             401 #> 47     yx            .png           <NA>             401 #> 48     yx            .png           <NA>             401 #> 49     yx            .png           <NA>             401 #> 50     yx            .png           <NA>             401 #> 51     yx            .png           <NA>             401 #> 52     yx            .png           <NA>             401 #> 53     yx            .png           <NA>             401 #> 54     yx            .png           <NA>             401 #> 55     yx            .png           <NA>             401 #> 56     yx            .png           <NA>             401 #> 57     yx            .png           <NA>             401 #> 58     yx            .png           <NA>             401 #> 59     yx            .png           <NA>             401 #> 60     yx            .png           <NA>             401 #> 61     yx            .png           <NA>             401 #> 62     yx            .png           <NA>             401 #> 63     yx            .png           <NA>             401 #> 64     yx            .png           <NA>             401 #> 65     yx            .png           <NA>             401 #> 66     xy            .png          ?key=             403 #> 67     xy            .png          ?key=             403 #> 68     xy            .png          ?key=             403 #> 69     xy            .png          ?key=             403 #> 70     xy            .png          ?key=             403 #> 71     xy            .png          ?key=             403 #> 72     xy            .png          ?key=             403 #> 73     xy            .png          ?key=             403 #> 74     xy            .png          ?key=             403 #> 75     xy            .png          ?key=             403 #> 76     xy            .jpg          ?key=             403 #> 77     xy            .png          ?key=             403 #> 78     xy            .png          ?key=             403 #> 79     xy            .png          ?key=             403 #> 80     xy            .png          ?key=             403 #>                       url_website #> 1  https://www.openstreetmap.org/ #> 2  https://www.openstreetmap.org/ #> 3  https://www.openstreetmap.org/ #> 4          https://stadiamaps.com #> 5          https://stadiamaps.com #> 6          https://stadiamaps.com #> 7          https://stadiamaps.com #> 8          https://stadiamaps.com #> 9          https://stadiamaps.com #> 10         https://stadiamaps.com #> 11         https://stadiamaps.com #> 12         https://stadiamaps.com #> 13      https://thunderforest.com #> 14      https://thunderforest.com #> 15      https://thunderforest.com #> 16      https://thunderforest.com #> 17      https://thunderforest.com #> 18      https://thunderforest.com #> 19      https://thunderforest.com #> 20      https://thunderforest.com #> 21      https://thunderforest.com #> 22      https://thunderforest.com #> 23                           <NA> #> 24                           <NA> #> 25                           <NA> #> 26                           <NA> #> 27                           <NA> #> 28                           <NA> #> 29                           <NA> #> 30                           <NA> #> 31                           <NA> #> 32                           <NA> #> 33        https://www.mapbox.com/ #> 34        https://www.mapbox.com/ #> 35        https://www.mapbox.com/ #> 36        https://www.mapbox.com/ #> 37        https://www.mapbox.com/ #> 38        https://www.mapbox.com/ #> 39        https://www.mapbox.com/ #> 40                           <NA> #> 41                           <NA> #> 42                           <NA> #> 43                           <NA> #> 44                           <NA> #> 45                           <NA> #> 46                           <NA> #> 47                           <NA> #> 48                           <NA> #> 49                           <NA> #> 50                           <NA> #> 51                           <NA> #> 52                           <NA> #> 53                           <NA> #> 54                           <NA> #> 55                           <NA> #> 56                           <NA> #> 57                           <NA> #> 58                           <NA> #> 59                           <NA> #> 60                           <NA> #> 61                           <NA> #> 62                           <NA> #> 63                           <NA> #> 64                           <NA> #> 65                           <NA> #> 66           https://maptiler.com #> 67           https://maptiler.com #> 68           https://maptiler.com #> 69           https://maptiler.com #> 70           https://maptiler.com #> 71           https://maptiler.com #> 72           https://maptiler.com #> 73           https://maptiler.com #> 74           https://maptiler.com #> 75           https://maptiler.com #> 76           https://maptiler.com #> 77           https://maptiler.com #> 78           https://maptiler.com #> 79           https://maptiler.com #> 80           https://maptiler.com  # add a custom map service and type yourself: add_maptypes(    map_service = \"someservice\", map_type = \"terrain\",     url_endpoint = \"https://tile.someservice.org\")  # control further aspects of a custom map service and type: add_maptypes(    map_service = \"someservice\", map_type = \"terrain\",     url_endpoint = \"https://tile.someservice.org\",     url_xy = \"xy\", #  order in which this service expects tile x and y id    url_file_format = \".png\",     url_map_token = \"?authtoken=\", # query params for auth token    auth_error_code = 401,     url_website = \"https://someservice.org\" )"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot raster objects using ggplot — plot","title":"Plot raster objects using ggplot — plot","text":"function plots objects class SpatRaster, RasterLayer, RasterBrick RasterStack ggplot2. used internally basemap* functions return ggplot plots.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot raster objects using ggplot — plot","text":"","code":"gg_raster(r, r_type = \"RGB\", gglayer = F, ...)"},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot raster objects using ggplot — plot","text":"r raster class SpatRaster, RasterLayer, RasterBrick RasterStack. r_type character, either \"gradient\" \"discrete\". gglayer logical, FALSE (default), ggplot2 plot returned, TRUE, ggplot2 layer returned. ... additional arguments, including maxpixels, numeric, maximum number pixels plotted (default: number pixels r). Use value lower ncell(r) lower resolution faster plotting. alpha, numeric 0 1, alpha value plotted data (transparency). maxColorValue, numeric, value  use colour maximum. interpolate, logical, whether smooth plot (default TRUE).","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot raster objects using ggplot — plot","text":"ggplot2 object","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/reference/plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot raster objects using ggplot — plot","text":"","code":"library(basemaps)  # example extent data(ext)  if (FALSE) { # \\dontrun{ # terra raster object map <- basemap_terra(ext)  # plotting raster as ggplot using the with fill aesthetic gg_raster(map, r_type = \"RGB\")  # or as gg layer using the with fill aesthetic ggplot() + gg_raster(map, r_type = \"RGB\", gglayer = T) + scale_fill_identity() } # }"},{"path":"https://jakob.schwalb-willmann.de/basemaps/news/index.html","id":"basemaps-010","dir":"Changelog","previous_headings":"","what":"basemaps 0.1.0","title":"basemaps 0.1.0","text":"Decreasing dependencies, minor improvements Features: added additional map types aquarelle_dark aquarelle_vivid map_service=\"maptiler\" (#32) added function add_maptypes allowing user add map types (see ?add_maptypes details) added functions save_maptypes load_maptypes save load map types (see ?save_maptypes details) Bugs: fixed faulty request format resulting 404 error map_service = \"maptiler\", map_type = \"aquarelle\" (issue #32) Changes: updated partly outdated documentation examples updated README include animated map type preview changed way raster tiles geo-located mosaiced tidied dependency tree, removed two dependencies","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/news/index.html","id":"basemaps-008","dir":"Changelog","previous_headings":"","what":"basemaps 0.0.8","title":"basemaps 0.0.8","text":"CRAN release: 2024-11-01 New map service Maptiler, minor improvements Features: added Maptiler support (map_service=\"maptiler\") many new map types https://maptiler.com (free token required), including \"aquarelle\", \"backdrop\", \"basic\", \"bright\", \"dataviz\", \"landscape\", \"ocean\", \"outdoor\", \"satellite\", \"streets\", \"toner\", \"topo\" \"winter\" (see get_maptypes()) Bugs: Resolves 404 HTTP error using map_service=\"osm_stamen\", map_type=\"watercolor\" (#31, #30, thanks @pushing-boulders PR) fixes issue remarked #29 produces much verbosity","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/news/index.html","id":"basemaps-007","dir":"Changelog","previous_headings":"","what":"basemaps 0.0.7","title":"basemaps 0.0.7","text":"CRAN release: 2024-04-16 Minor improvements Changes: maps rendered using basemap_ggplot basemap_gglayer objects plotted using gg_raster now displayed pixels default (full resolution, maxpixels argument) instead rendering lower resolution (previous default: 500000). switched using aes_string aes gg_raster due deprectation function ggplot2.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/news/index.html","id":"basemaps-006","dir":"Changelog","previous_headings":"","what":"basemaps 0.0.6","title":"basemaps 0.0.6","text":"CRAN release: 2024-03-03 Major improvements, adding new map services Bugs: Fixing issue maps appearing blurred/low resolution using basemap_ggplot basemap_gglayer. Maps now show consistent resolutions across plot/viewing methods. Fixing bug upstream causing maps get mosaiced correctly Fixing grDevices display bug NAs map imagery Changes: gg_raster now accepts interpolate, logical argument control smoothing plotted raster. added Stadia Maps support osm_stamen maps: Due changes Stamen, now need map token https://stadiamaps.com (free registration) Stamen maps. added Stadia Maps new map service osm_stadia (requires map token https://stadiamaps.com)","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/news/index.html","id":"basemaps-005","dir":"Changelog","previous_headings":"","what":"basemaps 0.0.5","title":"basemaps 0.0.5","text":"CRAN release: 2022-09-26 Added gg_raster basemap_terra Features: added basemap_terra output maps class SpatRaster package terra added gg_raster, function plots objects class RasterLayer, RasterBrick {RasterStack ggplot2 Changes: included terra Imports dependency replaced internal calls raster functions equivalent functions successor terra moved raster Imports Suggests, internally replaced successor terra moved stars Imports Suggests changed default value argument class basemap() plot user-friendly users familiar spatial classes","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/news/index.html","id":"basemaps-004","dir":"Changelog","previous_headings":"","what":"basemaps 0.0.4","title":"basemaps 0.0.4","text":"CRAN release: 2022-09-08 Updated help, bug fixes. Bugs: dropped defunct/maintained tile servers (OSM) map services list fixing bug (\"dimensions e1 e2 match\") trying build map map_service=\"mapbox\" map_type=\"terrain\" newer versions stars added handling fix plotting bug cases maps returned tile servers (whatever reasons) consist single value (e.g. 0) given query extent (#9) fixed bug placing cached maps wrong directory map_dir defined user (#11) cached maps stored directories currently set map_dir now disregarded avoid path errors switching map directories session (#11) Features: added flush_cache, function flushes cache thereby removes previously queried /composited products map directories (temporary user-defined using argument map_dir) used current session.","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/news/index.html","id":"basemaps-003","dir":"Changelog","previous_headings":"","what":"basemaps 0.0.3","title":"basemaps 0.0.3","text":"Minor improvements. Features: added CRS warning response issues #3, #7 added dpi argument, passing input png::writePNG (issue #5)","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/news/index.html","id":"basemaps-002","dir":"Changelog","previous_headings":"","what":"basemaps 0.0.2","title":"basemaps 0.0.2","text":"Bug fixes. Fixed bugs: added minimum version requirement dependency stars (>= 0.5.0) make sure st_set_bbox exported (see issue #3)","code":""},{"path":"https://jakob.schwalb-willmann.de/basemaps/news/index.html","id":"basemaps-001","dir":"Changelog","previous_headings":"","what":"basemaps 0.0.1","title":"basemaps 0.0.1","text":"CRAN release: 2021-05-19 Initial release. New functions: get_maptypes() returns every supported map service map type can used input map_service map_type arguments set_defaults(), basemap() associated functions. draw_ext() lets draw extent interactive map. set_defaults(), get_defaults() reset_defaults() set, get reset defaults map arguments passed basemap() associated functions. basemap() aliases basemap_raster(), basemap_stars(), basemap_mapview(), basemap_plot(), basemap_ggplot(), basemap_gglayer(), basemap_magick(), basemap_png() basemap_geotif() ()load cache basemap defined extent ext, map_service map_type return object defined class. New features: Everything.  document provide broad overview changes applied basemaps R package. warranty completeness, since minor changes might included. improvement feature descriptions bundled per release version. document currently maintained Jakob Schwalb-Willmann.","code":""}]
