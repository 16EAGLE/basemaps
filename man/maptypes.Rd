% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/defaults.R
\name{maptypes}
\alias{maptypes}
\alias{get_maptypes}
\alias{add_maptypes}
\alias{save_maptypes}
\alias{load_maptypes}
\title{Get supported map types or add new map types}
\source{
\code{"osm"}: Open Street Map contributors (\url{https://www.openstreetmap.org/copyright}), Open Topo Map (\url{https://opentopomap.org/})

\code{"osm_stamen"}: Stamen (\url{https://maps.stamen.com/}) via Stadia Maps (\url{https://stadiamaps.com/}), Open Street Map contributors (\url{https://www.openstreetmap.org/copyright})

\code{"osm_stadia"}: Stadia Maps (\url{https://stadiamaps.com/}), Open Street Map contributors (\url{https://www.openstreetmap.org/copyright})

\code{"osm_thunderforest"}: Thunderforest (\url{https://www.thunderforest.com/}), Open Street Map contributors (\url{https://www.openstreetmap.org/copyright})

\code{"carto"}: Carto (\url{https://carto.com/})

\code{"mapbox"}: Mapbox (\url{https://www.mapbox.com})

\code{"esri"}: Esri (\url{https://www.esri.com/en-us/home})

\code{"maptiler"}: Esri (\url{https://www.maptiler.com})
}
\usage{
get_maptypes(map_service = NULL, as_df = FALSE, url_cols = FALSE)

add_maptypes(
  map_service,
  map_type,
  url_endpoint,
  url_xy = "xy",
  url_file_format = ".png",
  url_map_token = as.character(NA),
  auth_error_code = 401,
  url_website = as.character(NA)
)

save_maptypes(file)

load_maptypes(file)
}
\arguments{
\item{map_service}{character. 
\itemize{
 \item for \code{get_maptypes()}: optional, either \code{"osm"}, \code{"osm_stamen"}, \code{"osm_stadia"}, \code{"osm_thunderforest"},  \code{"carto"}, \code{"mapbox"}, \code{"esri"} or \code{"maptiler"}. Otherwise, a list of map types for both services is returned.
 \item for \code{add_maptypes()}: character, name of map service the map type to add belongs to
}}

\item{as_df}{logical, whether to return a data.frame instead of a list (defaults to \code{FALSE})}

\item{url_cols}{logical, whether to include the endpoint URL and auxiliary URL columns (defults to \code{FALSE}). Ignored, if \code{as_df = FALSE}}

\item{map_type}{character, name of map type to add}

\item{url_endpoint}{character, endpoint URL for map service and type to add}

\item{url_xy}{character, either "xy" or "yx" defining the order the map service to add is expecting tile subscripts in (defaults to "xy")}

\item{url_file_format}{character, file format the endpoint to add is using (defaults to ".png").}

\item{url_map_token}{character, optional, request query string used by the endpoint to add for transmitting authentification tokens if required (defaults to \code{NA}). Run \code{get_maptypes(as_df = T, url_cols = T)$url_map_token} for examples.}

\item{auth_error_code}{numeric, http error code the endpoint to add uses if authentification failed (defaults to 401)}

\item{url_website}{character, optional, website URL for the service to add the user is directed to for registering (defaults to \code{NA}).}

\item{file}{character, file name ending on ".csv" that the map types table is saved to or loaded from.}
}
\value{
A character vector of supported map types
}
\description{
These functions manage map types.
}
\details{
\code{get_maptypes()} returns every supported map type that can be used as input to the \code{map_type} argument of \code{\link{set_defaults}}, \code{\link{basemap}} or associated functions.

\code{add_maptypes()} adds custom user-defined map types.

\code{save_maptypes()} saves the current map types table (as printed by \code{get_maptypes(as_df = T, url_cols = T)}) to a file.

\code{load_maptypes()} loads a map types table from file.
}
\examples{
# for all services, as list (default:)
get_maptypes()

# for osm only
get_maptypes("osm")
# or
get_maptypes()$osm

# for mapbox only
get_maptypes("mapbox")
# or
get_maptypes()$mapbox

# same for all other map services

# or as data.frame:
get_maptypes(as_df = TRUE)

# or as data.frame including all url columns (endpoints):
get_maptypes(as_df = TRUE, url_cols = TRUE)

# add a custom map service and type yourself:
add_maptypes(
   map_service = "someservice", map_type = "terrain", 
   url_endpoint = "https://tile.someservice.org")

# control further aspects of a custom map service and type:
add_maptypes(
   map_service = "someservice", map_type = "terrain", 
   url_endpoint = "https://tile.someservice.org", 
   url_xy = "xy", #  order in which this service expects tile x and y id
   url_file_format = ".png", 
   url_map_token = "?authtoken=", # query params for auth token
   auth_error_code = 401, 
   url_website = "https://someservice.org"
)

}
\seealso{
\code{\link{basemap}}
}
